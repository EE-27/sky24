Task 1
    Connect and configure documentation output for the project. Make sure that each of the implemented
    endpoints is described correctly in the documentation, if necessary, describe them manually.

Task 2
    Connect the ability to pay for courses via https://stripe.com/docs/api.

    Access can be obtained directly from the documentation, and a simple registration
    can be done at https://dashboard.stripe.com/register.

    To work with requests, you will need to implement access to endpoints:

 https://stripe.com/docs/api/payment_intents/create - create payment;
 https://stripe.com/docs/api/payment_intents/retrieve - receiving payment.
    You can use card numbers from the documentation for testing:

 https://stripe.com/docs/terminal/references/testing#standard-test-cards
    Connecting payment is best viewed as a normal task of connecting to a third-party API.

    The main path: purchase request â†’ payment. There is no need to check the status.

    Each acquirer provides test cards for working with virtual money.


Task 1
    Set up the project to work with Celery. Also configure Celery-beat to perform subsequent tasks.

Task 2
    Earlier, you implemented a feature to subscribe to course updates. Now add asynchronous emailing to users about
       updates to course materials.

* Next task A user can update each course lesson separately. Add a check to only send notifications if the course has
  not been updated for more than 4 hours.

Task 3
    Use celery-beat to implement a background task that will check the user by last_login, and if the user has not
    logged in for more than a month, block the user using the is_active flag.